apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


String APK_NAME = "ParcelShop"
int VERSION_CODE = 8
String VERSION_NAME = "1.3.12"

def filePath = System.getProperty('user.home') + '/sign.postoffice.gradle'
if (file(filePath).exists()){
    apply from: filePath
    println 'Found signing file ' + filePath
    println 'keystore Path is '+ project.ext.releaseKeyStore
} else {
    println 'Signing file not found: use default signing parameters'
    project.ext.releaseKeyStore = ''
}


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        applicationId "co.uk.postoffice.apps.parcelshop"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        releaseSigningConfig
    }



    buildTypes {


        preprod {
            applicationIdSuffix = '.preprod'
            minifyEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix '.debug'
        }


        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig   signingConfigs.releaseSigningConfig
        }


        applicationVariants.all {variant->
            variant.outputs.all{ output->
                if(variant.buildType.name == "release"){
                    def apk_name = APK_NAME + "_" + "${variant.name}"+ "_" + VERSION_NAME + "_" + VERSION_CODE + ".apk"
                    output.outputFileName = new File("./", apk_name)
                }else if(variant.buildType.name == "preprod"){
                    def apk_name = APK_NAME + "_" + "${variant.name}"+"_" +VERSION_NAME + "_" + VERSION_CODE + "_preprod.apk"
                    output.outputFileName = new File("./", apk_name)
                }else{
                    def apk_name = APK_NAME + "_" + "${variant.name}"+"_" +VERSION_NAME + "_" + VERSION_CODE + "_debug.apk"
                    output.outputFileName = new File("./", apk_name)
                }
            }
        }
    }

    def isRunningOnTravis = System.getenv("CI") == "true"

    if (isRunningOnTravis) {
        // configure keystore
        signingConfigs.releaseSigningConfig.storeFile = file("../postoffice.jks")
        signingConfigs.releaseSigningConfig.storePassword = System.getenv("keystore_password")
        signingConfigs.releaseSigningConfig.keyAlias = System.getenv("keystore_alias")
        signingConfigs.releaseSigningConfig.keyPassword = System.getenv("keystore_alias_password")
    } else {
        signingConfigs.releaseSigningConfig.storeFile =  file(project.ext.releaseKeyStore)
        signingConfigs.releaseSigningConfig.storePassword = project.ext.releaseKeyStorePassword
        signingConfigs.releaseSigningConfig.keyAlias =    project.ext.releaseKeyAlias
        signingConfigs.releaseSigningConfig.keyPassword = project.ext.releaseKeyPassword
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.slf4j:slf4j-api:1.7.28"
    implementation "com.github.tony19:logback-android:2.0.0"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'net.lingala.zip4j:zip4j:2.2.3'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.mazenrashed:Printooth:1.2.1'
}
